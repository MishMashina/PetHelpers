// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PetHelpers.Infrastructure;

#nullable disable

namespace PetHelpers.Infrastructure.Migrations
{
    [DbContext(typeof(PetHelpersDbContext))]
    [Migration("20240808172030_Created base Entity")]
    partial class CreatedbaseEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PetHelpers.Domain.Models.Pet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateOnly>("Birthdate")
                        .HasColumnType("date")
                        .HasColumnName("birthdate");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("color");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creation_date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("description");

                    b.Property<string>("HealthInfo")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("health_info");

                    b.Property<int>("Height")
                        .HasColumnType("integer")
                        .HasColumnName("height");

                    b.Property<int>("HelpStatus")
                        .HasColumnType("integer")
                        .HasColumnName("help_status");

                    b.Property<bool>("IsCastrated")
                        .HasColumnType("boolean")
                        .HasColumnName("is_castrated");

                    b.Property<bool>("IsVaccinated")
                        .HasColumnType("boolean")
                        .HasColumnName("is_vaccinated");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("location");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<string>("OwnersPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("owners_phone_number");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("species");

                    b.Property<Guid?>("VolunteerId")
                        .HasColumnType("uuid")
                        .HasColumnName("volunteer_id");

                    b.Property<int>("Weight")
                        .HasColumnType("integer")
                        .HasColumnName("weight");

                    b.HasKey("Id")
                        .HasName("pk_pet");

                    b.HasIndex("VolunteerId")
                        .HasDatabaseName("ix_pet_volunteer_id");

                    b.ToTable("pet", (string)null);
                });

            modelBuilder.Entity("PetHelpers.Domain.Models.PetPhoto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("IsMain")
                        .HasColumnType("boolean")
                        .HasColumnName("is_main");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("path");

                    b.Property<Guid?>("PetId")
                        .HasColumnType("uuid")
                        .HasColumnName("pet_id");

                    b.HasKey("Id")
                        .HasName("pk_pet_photo");

                    b.HasIndex("PetId")
                        .HasDatabaseName("ix_pet_photo_pet_id");

                    b.ToTable("pet_photo", (string)null);
                });

            modelBuilder.Entity("PetHelpers.Domain.Models.Requisite", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("description");

                    b.Property<Guid?>("PetId")
                        .HasColumnType("uuid")
                        .HasColumnName("pet_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("title");

                    b.Property<Guid?>("VolunteerId")
                        .HasColumnType("uuid")
                        .HasColumnName("volunteer_id");

                    b.HasKey("Id")
                        .HasName("pk_requisite");

                    b.HasIndex("PetId")
                        .HasDatabaseName("ix_requisite_pet_id");

                    b.HasIndex("VolunteerId")
                        .HasDatabaseName("ix_requisite_volunteer_id");

                    b.ToTable("requisite", (string)null);
                });

            modelBuilder.Entity("PetHelpers.Domain.Models.SocialMedia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("link");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("title");

                    b.Property<Guid?>("VolunteerId")
                        .HasColumnType("uuid")
                        .HasColumnName("volunteer_id");

                    b.HasKey("Id")
                        .HasName("pk_social_media");

                    b.HasIndex("VolunteerId")
                        .HasDatabaseName("ix_social_media_volunteer_id");

                    b.ToTable("social_media", (string)null);
                });

            modelBuilder.Entity("PetHelpers.Domain.Models.Volunteer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("description");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("full_name");

                    b.Property<int>("PetsFoundHome")
                        .HasColumnType("integer")
                        .HasColumnName("pets_found_home");

                    b.Property<int>("PetsInTreatment")
                        .HasColumnType("integer")
                        .HasColumnName("pets_in_treatment");

                    b.Property<int>("PetsLookingForHome")
                        .HasColumnType("integer")
                        .HasColumnName("pets_looking_for_home");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("phone_number");

                    b.Property<int>("YearsOfExperience")
                        .HasColumnType("integer")
                        .HasColumnName("years_of_experience");

                    b.HasKey("Id")
                        .HasName("pk_volunteers");

                    b.ToTable("volunteers", (string)null);
                });

            modelBuilder.Entity("PetHelpers.Domain.Models.Pet", b =>
                {
                    b.HasOne("PetHelpers.Domain.Models.Volunteer", null)
                        .WithMany("OwnedPets")
                        .HasForeignKey("VolunteerId")
                        .HasConstraintName("fk_pet_volunteers_volunteer_id");
                });

            modelBuilder.Entity("PetHelpers.Domain.Models.PetPhoto", b =>
                {
                    b.HasOne("PetHelpers.Domain.Models.Pet", null)
                        .WithMany("Photos")
                        .HasForeignKey("PetId")
                        .HasConstraintName("fk_pet_photo_pet_pet_id");
                });

            modelBuilder.Entity("PetHelpers.Domain.Models.Requisite", b =>
                {
                    b.HasOne("PetHelpers.Domain.Models.Pet", null)
                        .WithMany("Requisites")
                        .HasForeignKey("PetId")
                        .HasConstraintName("fk_requisite_pet_pet_id");

                    b.HasOne("PetHelpers.Domain.Models.Volunteer", null)
                        .WithMany("Requisites")
                        .HasForeignKey("VolunteerId")
                        .HasConstraintName("fk_requisite_volunteers_volunteer_id");
                });

            modelBuilder.Entity("PetHelpers.Domain.Models.SocialMedia", b =>
                {
                    b.HasOne("PetHelpers.Domain.Models.Volunteer", null)
                        .WithMany("SocialMedias")
                        .HasForeignKey("VolunteerId")
                        .HasConstraintName("fk_social_media_volunteers_volunteer_id");
                });

            modelBuilder.Entity("PetHelpers.Domain.Models.Pet", b =>
                {
                    b.Navigation("Photos");

                    b.Navigation("Requisites");
                });

            modelBuilder.Entity("PetHelpers.Domain.Models.Volunteer", b =>
                {
                    b.Navigation("OwnedPets");

                    b.Navigation("Requisites");

                    b.Navigation("SocialMedias");
                });
#pragma warning restore 612, 618
        }
    }
}
